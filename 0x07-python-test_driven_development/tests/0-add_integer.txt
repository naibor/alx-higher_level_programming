========================================================================
'Test for 0-add_integer module'
========================================================================
'Function to test: add_integer()'
========================================================================

Import function:
>>> add_integer = __import__('0-add_integer').add_integer

Test cases:

'negative integer values'
>>> add_integer(-3, -4)
-7

'positive integer values'
>>> add_integer(2, 60)
62

'negative floating values'
>>> add_integer(-3.54, -4.40)
-7

'positive floating values'
>>> add_integer(2.54, 60.43)
62

'one argument'
>>> add_integer(2)
103

'argument b is empty'
>>> add_integer(9,)
103

'a is an integer and b is a string'
>>> add_integer(7, "Lorem")
Traceback (most recent call last):
...
TypeError: b must be an integer

'b is an integer and a is a string'
>>> add_integer("Lorem", 7)
Traceback (most recent call last):
...
TypeError: a must be an integer

'missing arguments'
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

'argument a is a bool'
>>> add_integer(False, 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument a is a tuple'
>>> add_integer((3, 5), 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument a is a list'
>>> add_integer([3, 5], 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument a is a dict'
>>> add_integer({3, 5}, 4)
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument b is a bool'
>>> add_integer(3, False)
Traceback (most recent call last):
...
TypeError: b must be an integer

'argument b is a tuple'
>>> add_integer(2, (8, 5))
Traceback (most recent call last):
...
TypeError: b must be an integer

'argument b is a list'
>>> add_integer(5, [8, 5])
Traceback (most recent call last):
...
TypeError: b must be an integer

'argument b is a dict'
>>> add_integer(8, {0, 5})
Traceback (most recent call last):
...
TypeError: b must be an integer

'argument a is an infinity float'
>>> import sys
>>> add_integer(sys.float_info.max + 1e272)
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument b is an infinity float'
>>> import sys
>>> add_integer(3, sys.float_info.max + 1e272)
Traceback (most recent call last):
...
TypeError: b must be an integer

'argument a is nan'
>>> add_integer(float('nan'))
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument b is nan'
>>> add_integer(3, float('nan'))
Traceback (most recent call last):
...
TypeError: b must be an integer

'argument a is inf'
>>> add_integer(float('inf'))
Traceback (most recent call last):
...
TypeError: a must be an integer

'argument b is inf'
>>> add_integer(3, float('inf'))
Traceback (most recent call last):
...
TypeError: b must be an integer

